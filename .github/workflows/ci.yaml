name: Build

on:
  push:
    branches: ['*']
    tags:
    paths_ignore: ['docs/**', '.travis.yml']
  pull_request:
  release:
    types: ['created']

defaults:
  run:
    shell: bash

jobs:
  build-linux:
    container:
      image: thebigg1/cpp20-linux:latest
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Publish Linunx Release
            publish-release: true
        config:
        - {name: "ubuntu-18.04", os: "ubuntu-18.04"}
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Check Coding Style
      run: |
        ./check-clang-format.sh
    - name: Build
      run:  |
        cd tests
        mkdir build
        cd build
        cmake ..
        make
    - name: Run Tests And Generate Coverage
      run: |
        cd tests/build
        lcov -c -i -b modules/ -d modules/ -o Coverage.baseline
        ./tests/test
        lcov -c -d . -b modules -o Coverage.out
        lcov -a Coverage.baseline -a Coverage.out -o Coverage.combined
        genhtml Coverage.combined -o HTML


  build-container-linux:
    strategy:
      fail-fast: false
      matrix:
        config:
          - { name: "ubuntu-18.04", os: "ubuntu-18.04" }
    name: build-container-linux
    runs-on: ${{ matrix.config.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          context: .
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          builder: ${{ steps.buildx.outputs.name }}
          file: ./misc/docker/Dockerfile
          push: true
          tags: thebigg1/cpp20-linux:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

